package com.nirsa.nw.web.app.servicioatunera.model.services.Impl;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpEntity;
import org.springframework.http.HttpHeaders;
import org.springframework.http.HttpMethod;
import org.springframework.http.MediaType;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;
import org.springframework.web.client.RestTemplate;

import com.nirsa.nw.web.app.servicioatunera.model.dto.Detalle;
import com.nirsa.nw.web.app.servicioatunera.model.dto.RequestMonitor;
import com.nirsa.nw.web.app.servicioatunera.model.entity.NwiCabControl;
import com.nirsa.nw.web.app.servicioatunera.model.entity.NwiCabIntegracionSap;
import com.nirsa.nw.web.app.servicioatunera.model.entity.NwiDetIntegracionSap;
import com.nirsa.nw.web.app.servicioatunera.model.entity.NwiPosicionDetalle;
import com.nirsa.nw.web.app.servicioatunera.model.entity.NwiPosicionDetallePK;
import com.nirsa.nw.web.app.servicioatunera.model.entity.ResponseSap;
import com.nirsa.nw.web.app.servicioatunera.model.services.ICabControlService;
import com.nirsa.nw.web.app.servicioatunera.model.services.INwiCabIntegracionSapService;
import com.nirsa.nw.web.app.servicioatunera.model.services.ISapService;
import com.nirsa.nw.web.app.servicioatunera.utils.ValoresConstantes;

@Service
public class SapService implements ISapService {
	
	@Autowired
	INwiCabIntegracionSapService nwiCabService;
	
	@Autowired
	ICabControlService nwiCabControlService;
	
	@Autowired
	private RestTemplate conexionEnlace;

	@Override
	@Transactional
	public void recibirSap(List<ResponseSap> responseSap) {
		List<ResponseSap> confirmadas = new ArrayList<ResponseSap>();
		
		for(ResponseSap sap:responseSap) {
			NwiCabIntegracionSap nwiCab = nwiCabService.findById(sap.getIdintegracion());
			if(nwiCab!=null && nwiCab.getNwiDetalle()!=null) {
				//nwiCab.getNwiDetalle().setEstadorespuestasap(1);
				//nwiCab.getNwiDetalle().setFecharespuesta(new Date());
				nwiCab.getNwiDetalle().setJsonrespuestasap(sap.getRespuestaSap());
				nwiCabService.guardar(nwiCab);
				confirmadas.add(sap);
			}
		}
		if(confirmadas.size()>0) {
			enviarIntegrador(confirmadas);
		}
	}
	
	private void enviarIntegrador(List<ResponseSap> confirmadas) {
		HttpHeaders headers = new HttpHeaders();
		headers.setAccept(Arrays.asList(MediaType.APPLICATION_JSON));
		HttpEntity<List<ResponseSap>> entity = new HttpEntity<List<ResponseSap>>(confirmadas, headers);
		conexionEnlace.exchange(ValoresConstantes.urlIntegrador, HttpMethod.POST, entity, String.class).getBody();
	}

	
	@Override
	public Map<String,Object> enviar(RequestMonitor request) {
		Map<String,Object> envioSap = generarJsonSap(request);
		return envioSap;
	}
	
	@SuppressWarnings("unchecked")
	private Map<String,Object> generarJsonSap(RequestMonitor request){
		Map<String,Object> envioSap = new HashMap<>();
		List<Map<String,Object>> detalleSap = new ArrayList<>();
		
		
		
		// conformaci√≥n de la cabecera del JSON
		Set<String> keys = request.getJsonCabecera().keySet();
		
		for ( String key : keys ) {
			Object value = request.getJsonCabecera().get(key);
			envioSap.put(key, value);	
        }
		
		// conformacion de los detalles
	
		for(Map<String,Object> detalle:request.getDetalle()) {
			Map<String,Object> detalleFinal = new HashMap<>();
			Object valuePosicion = detalle.get("id_posicion");
			detalleFinal.put("id_posicion", valuePosicion);
			
			Map<String,Object> keysJson = null;
			
			try {
				keysJson = (Map<String, Object>) detalle.get("JSON");
				Set<String> keysValoresJson = keysJson.keySet();
				for ( String key : keysValoresJson ) {
					Object value = keysJson.get(key);
					detalleFinal.put(key, value);	
		        }
				
			}
			catch(Exception ex) {
				keysJson = new HashMap<>();
				keysJson.put("valores", "nulos");
			}
			
			detalleSap.add(detalleFinal);
		}
		
		Long idintegracion = 1L;
		envioSap.put("DETALLE", detalleSap);
		envioSap.put("id_integracion", idintegracion);
		return envioSap;
	}
	
	private Long registrarPosiciones(Map<String,Object> jsonGlobal, List<Map<String,Object>> detalles,Map<String,Object> jsonParams) {
		
		NwiCabControl control = this.nwiCabControlService.buscarPorJson(jsonParams);
		
		Long idControl = null;
		
		if(control!=null) {
			idControl = control.getIdControl();
		}
		NwiCabIntegracionSap cab = new NwiCabIntegracionSap();
		NwiDetIntegracionSap det = new NwiDetIntegracionSap();
		
		cab.setUsuario_registra("encartonado");
		//cab.setJsontext(request.getJsonCabecera());
		cab.setEstado(1);
		cab.setUsuariomodifica("encartonado");
		det.setEstadoenviosap(1);
		det.setJsonenviosap(jsonGlobal);
		det.setFecharegistro(new Date());
		cab.setNwiDetalle(det);
		// registro de posiciones
		
		for(Map<String,Object> detalle:detalles) {
			
		}
		
		cab = nwiCabService.guardar(cab);
		
		return cab.getIdcabintegracionsap();
	}

	

}
